<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

	<context:annotation-config />
	
	<!-- 数据源：DriverManagerDataSourse -->
	<bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/library"  />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	
	<!-- SQLSession工厂：SqlSessionFactoryBean 
		 dataSourse:引用数据源
		 typeAliasesPackage:指定实体类包名，自动将实体类名映射成包名
		 mapperLocations: 你配置的mapper.xml
		 plugins:就是插件啦你懂的
	-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds"/>
		<property name="typeAliasesPackage" value="com.lauguobin.www"/>
		<property name="mapperLocations"
        value="classpath*:/*Mapper.xml"></property>
        <property name="plugins">
	         <array>
	            <bean class="com.lauguobin.www.util.PageInterceptor"></bean>
	        </array>
        </property>
	</bean>
	
	<!-- 自动扫描加载的映射文件：MapperScannerConfigurer
		 basePackage:指定sql映射文件/接口所在的包（自动扫描）
		 sqlSessionFactory:引用上面的sqlSessionFactory
	 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.lauguobin.www.dao"/>
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>
	
	<!-- 定义SqlSessionTemplate -->  
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">  
		<constructor-arg index="0" ref="sqlSessionFactory"></constructor-arg>  
	</bean>  
	
	
	<!-- 事务管理：DataSourceTransactionManager
		 dataSourse：引用上面的数据源
	 -->
<!--	<bean id="tx" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="ds"></property>
	</bean>-->
	
	<!-- 使用声明式事务 -->
<!--	<tx:annotation-driven transaction-manager="tx"/>-->
	
	<!-- 注册拦截器 -->
	<mvc:interceptors>
		<bean class="com.lauguobin.www.util.LoginInterceptor"></bean>
		<mvc:interceptor>
			<mvc:mapping path="/student/*"/>
			<bean class="com.lauguobin.www.util.StudentInterceptor"></bean>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/manager/*"/>
			<bean class="com.lauguobin.www.util.ManagerInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
</beans>